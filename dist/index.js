import{createEl}from"@codebundlesbyvik/js-helpers";const DEFAULT_OPTIONS={parentEl:document.body,position:["bottom","right"],size:"md",text:"Build: dev",fontFamily:"monospace",backgroundColor:"#FFFFFF",borderColor:"#FF0000"},PADDINGS={sm:"0.75rem",md:"1rem",lg:"1.333333rem"},FONT_SIZES={sm:"1rem",md:"1.25rem",lg:"1.5rem"},FONT_FAMILIES={monospace:'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"sans-serif":'system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", "Noto Sans", "Liberation Sans", Arial, sans-serif',inherit:"inherit"},BORDER_WIDTHS={sm:"0.1875rem",md:"0.25rem",lg:"0.333333rem"};function htmlDevLabel(options=DEFAULT_OPTIONS){if("development"!==process.env.NODE_ENV)return;if(console.log("Project is compiled in development mode."),document.body.contains(document.querySelector("#html-dev-label")))return void console.log("html-dev-label: An element with the htmlDevLabel ID is already in the DOM! Returning.");if("string"==typeof options)return void console.warn("html-dev-label: 'position' of type String is deprecated! Please convert its value to an Array.");const userOptions=Array.isArray(options)?{position:options}:options,mergedOptions=Object.assign(Object.assign({},DEFAULT_OPTIONS),userOptions),elCss=`position: fixed; ${mergedOptions.position[0]}: 0.25rem; ${mergedOptions.position[1]}: 0.25rem; z-index: 1000000; padding: ${PADDINGS[mergedOptions.size]}; text-transform: uppercase; font: 700 ${FONT_SIZES[mergedOptions.size]}/1.2 ${FONT_FAMILIES[mergedOptions.fontFamily]}; background-color: ${mergedOptions.backgroundColor}; border: ${BORDER_WIDTHS[mergedOptions.size]} solid ${mergedOptions.borderColor};`,el=createEl("div",{id:"html-dev-label",style:elCss});el.textContent=mergedOptions.text,mergedOptions.parentEl.insertBefore(el,mergedOptions.parentEl.firstElementChild)}export{htmlDevLabel as default};